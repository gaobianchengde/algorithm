import java.util.ArrayList;

/*
 * 题目描述
输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
 */


/*
 * 
 */
public class Solution {
	public ArrayList<Integer> printMatrix(int [][] matrix) {
		//旋转魔方，每次取完第一行数字，顺时针旋转
		ArrayList<Integer> list = new ArrayList<Integer>();
		int row = matrix.length;
		while(row != 0) {
			for(int i=0; i<matrix[0].length; i++) {
				list.add(matrix[0][i]);
			}
			if(row == 1)
				break;
			matrix = turn(matrix);
			row = matrix.length;
		}
		return list;
    }

	private int[][] turn(int[][] matrix) {
		int row = matrix.length;
		int col = matrix[0].length;
		int[][] newMatrix = new int[col][row-1];
		for(int j=col-1; j>=0; j--) {
			for(int i=1; i<row; i++) {
				newMatrix[col-1-j][i-1] = matrix[i][j];			
				}
		}
		return newMatrix;
	}
}