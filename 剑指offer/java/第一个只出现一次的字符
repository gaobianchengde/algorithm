/*
 * 题目描述
在一个字符串(0<=字符串长度<=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.
 */


/*
 * 解题思路参见剑指offer50题
 */
import java.util.LinkedHashMap;
import java.util.Map;
public class Solution {
    public int FirstNotRepeatingChar(String str) {
    	if(str.equals(""))
    		return -1;
    	Map<Character, Integer> map = new LinkedHashMap<Character, Integer>();
    	char ck = 0;
    	char[] c = str.toCharArray();
    	for(int i=0; i<c.length; i++) {
    		if(map.containsKey(c[i]))
    			map.put(c[i], map.get(c[i])+1);
    		else
    			map.put(c[i], 1);
    	}
    	for(Character key : map.keySet()) {
    		if(map.get(key) == 1) {
    			ck = key;
    			break;
    		}
    	}
    	for(int i=0; i <c.length; i++) {
    		if(ck == c[i])
    			return i;
    	}
        return 0;
    }
}