/*
 * 题目描述
请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。
 */


/*
*
*/
import java.util.ArrayList;
import java.util.Stack;
public class Solution {
    public ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
    	int layer = 1;
    	Stack<TreeNode> s1 = new Stack<TreeNode>();
    	s1.push(pRoot);
    	Stack<TreeNode> s2 = new Stack<TreeNode>();
    	
    	ArrayList<ArrayList<Integer>> list = new ArrayList<ArrayList<Integer>>();
    	
    	while(!s1.isEmpty() || !s2.isEmpty()) {
    		if(layer%2 != 0) {
    			ArrayList<Integer> temp = new ArrayList<Integer>();
    			while(!s1.isEmpty()) {
    				TreeNode node = s1.pop();
    				if(node != null) {
    					temp.add(node.val);
    					s2.push(node.left);
    					s2.push(node.right);
    				}
    			}
    			if(!temp.isEmpty()) {
    				list.add(temp);
    				layer++;
    			}
    		}else {
    			ArrayList<Integer> temp = new ArrayList<Integer>();
    			while(!s2.isEmpty()) {
    				TreeNode node = s2.pop();
    				if(node != null) {
    					temp.add(node.val);
    					s1.push(node.right);
    					s1.push(node.left);
    				}
    			}
    			if(!temp.isEmpty()) {
    				list.add(temp);
    				layer++;
    			}
    		}
    	}
    	return list;
    }

}