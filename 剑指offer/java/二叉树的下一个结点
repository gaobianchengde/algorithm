/*
 * 题目描述
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。
 */


/*
*分为四种情况：
*1一个节点有有右子树，那么它的下一个节点就是它的右子树中的最左子节点。
*以下为没有右子树的情况
*2它是它父节点的左子节点，那么它的下一个节点就是它的父节点。
*3它是它父节点的右子节点，分为两种情况
*（1）沿着指向父节点的指针一直向上遍历，直到找到一个是它父节点的左子节点的节点
*（2）若遍历完也没有是它父节点的左子节点的节点，那么结束
*/

public class Solution {
    public TreeLinkNode GetNext(TreeLinkNode pNode)
    {
        if(pNode.right != null) {
        	TreeLinkNode t = pNode.right;
        	while(t.left != null)
        		t = t.left;
        	return t;
        }
        
        if(pNode.next != null && pNode.next.left == pNode) {
        	return pNode.next;
        }
        
        if(pNode.next != null && pNode.next.right == pNode) {
        	TreeLinkNode t = pNode.next;
        	while(t.next != null) {
        		if(t.next.left == t)
        			return t.next;
        		t = t.next;
        	}
        }
        
        return null;
        
    }
}